Notes from Locating Restriction Sites problem https://rosalind.info/problems/revp/

I pulled "def reverse_complement(seq):
    complement = {'A': 'T', 'T': 'A', 'C': 'G', 'G': 'C'}
    return ''.join(complement[base] for base in reversed(seq))""
online i couldn't work out how to work out the complement sequence.
i found someone elses code that used a dictionary to map bases to their complements.

{} — defines a dictionary (a key-value mapping).

'A': 'T' — this is a key-value pair:









Notes from RNA Splicing problem https://rosalind.info/problems/splc/

I assumed records is an array but its actually a list of SeqRecord objects.
Each element in records is a SeqRecord object, which includes:

record.id → the sequence ID (like the FASTA header without the >)

record.seq → the actual DNA sequence (as a Seq object)

Use Bio SeqIO to read FASTA and put it in records. It saves it as a SeqRecord,
which we then reassign as a string to a variable. Then we start processing.
remember 
Load sequence(s) → assign parts → convert to string → manipulate → return/print/save